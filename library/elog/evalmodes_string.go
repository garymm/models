// Code generated by "stringer -type=EvalModes"; DO NOT EDIT.

package elog

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AllModes-0]
	_ = x[Train-1]
	_ = x[Test-2]
	_ = x[Validate-3]
	_ = x[EvalModesN-4]
}

const _EvalModes_name = "AllModesTrainTestValidateEvalModesN"

var _EvalModes_index = [...]uint8{0, 8, 13, 17, 25, 35}

func (i EvalModes) String() string {
	if i < 0 || i >= EvalModes(len(_EvalModes_index)-1) {
		return "EvalModes(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _EvalModes_name[_EvalModes_index[i]:_EvalModes_index[i+1]]
}

func (i *EvalModes) FromString(s string) error {
	for j := 0; j < len(_EvalModes_index)-1; j++ {
		if s == _EvalModes_name[_EvalModes_index[j]:_EvalModes_index[j+1]] {
			*i = EvalModes(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: EvalModes")
}
